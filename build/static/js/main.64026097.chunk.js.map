{"version":3,"sources":["Bank.module.css","logo.svg","BankApp.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BankApp","useState","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","setProvider","setSigner","contract","setContract","transferHash","setTransferHash","checkAcc","setCheckAcc","setAccStatus","accbalance","setAccBalance","accountChangedHandler","newAccount","updateEthers","window","ethereum","on","location","reload","tempProvider","ethers","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","simple_token_abi","createAccount","a","createAcc","txt","console","log","checkAccountExists","accountExists","AccountBalance","accountBalance","balanceNumber","toNumber","DepositBalance","e","preventDefault","depositAmount","target","value","deposit","transferHandler","transferAmount","sendAmount","recieverAddress","transferEther","hash","WithdrawBalance","withdrawAmount","withdraw","className","styles","button6","onClick","isMetaMask","request","method","then","result","catch","error","message","walletCard","interactionsCard","onSubmit","type","id","addressInput","min","step","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64026097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"walletCard\":\"Bank_walletCard__1YYKx\",\"interactionsCard\":\"Bank_interactionsCard__2q-J3\",\"addressInput\":\"Bank_addressInput__FhIoN\",\"button6\":\"Bank_button6__vFpGY\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Bank.module.css'\nimport simple_token_abi from './Contracts/bank_app_abi.json'\nimport Interactions from './Interactions';\n\nconst BankApp = () => {\n\n\t// deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n\tlet contractAddress = '0x59eFE99aA926a79edEA31F7ED3b2661b1F9e2F62';\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\tconst [checkAcc, setCheckAcc] = useState(\"false\");\n\tconst [accStatus, setAccStatus]= useState(\"\");\n\tconst [accbalance, setAccBalance]= useState(\"\");\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tupdateEthers();\n\t}\n\tconst chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n\n\t// listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\n\n\tconst updateEthers = () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\t\tsetProvider(tempProvider);\n\n\t\tlet tempSigner = tempProvider.getSigner();\n\t\tsetSigner(tempSigner);\n\n\t\tlet tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n\t\tsetContract(tempContract);\t\n\t}\n\n\tconst createAccount = async()=>{\n\t\tlet txt = await contract.createAcc();\n\t\tconsole.log(txt);\n\t\tsetAccStatus(\"Your Account is created\");\n\t}\n\tconst checkAccountExists = async()=>{\n\t\t///e.preventDefault();\n\t\tlet txt = await contract.accountExists();\n\t\tif(txt==true){\n\t\tsetCheckAcc(\"true\");\n\t\t}\n\t}\n\tconst AccountBalance = async()=>{\n\t\tlet txt= await contract.accountBalance();\n\t\tlet balanceNumber = txt.toNumber();\n\t\t//let tokenDecimals = await contract.decimals();\n\t\tconsole.log(balanceNumber)\n\t\tsetAccBalance(''+balanceNumber);\n\t}\n\tconst DepositBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet depositAmount = e.target.depositAmount.value;\n\t\tlet txt= await contract.deposit({\n\t\t\tvalue: depositAmount \n\t\t});\n\t}\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet transferAmount = e.target.sendAmount.value;\n\t\tlet recieverAddress = e.target.recieverAddress.value;\n\t\tlet txt = await contract.transferEther(recieverAddress, transferAmount);\n\t\tsetTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n\t}\n\tconst WithdrawBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet withdrawAmount = e.target.withdrawAmount.value;\n\t\tlet txt= await contract.withdraw(withdrawAmount);\n\t\tconsole.log(txt);\n\t}\n\n\n\treturn (\n\t<div >\n\t\t<h2> Bank Dapp- Create Account,Check Account,Check Balance,Transfer and Deposit </h2>\n\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\n\n\t\t<div className={styles.walletCard}>\n\t\t<div>\n\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button onClick={AccountBalance}>Account Balance</button> <h3>Balance in the Bank: {accbalance} </h3>\n\t\t</div>\n\n\t\t\t{errorMessage}\n\t\t</div>\n\t\t<div className={styles.interactionsCard}>\n\t\t<div>\n\t\t<h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\n\t\t\t<button onClick={createAccount}>CreateAccount</button>\n\t\t\t<h4>Click here to check if your account Exists or not</h4>\n\t\t\t<button onClick={checkAccountExists}>CheckAccountExists</button>\n\t\t\t<h4>Your Account Status</h4> <h5> {checkAcc}</h5>\n\t\t</div>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t<h3> Transfer Test BNB </h3>\n\t\t\t\t\t\t<p> Reciever Address </p>\n\t\t\t\t\t\t<input type='text' id='recieverAddress' className={styles.addressInput}/>\n\n\t\t\t\t\t\t<p> Transfer Amount </p>\n\t\t\t\t\t\t<input type='number' id='sendAmount' min='0' step='1'/>\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Transfer</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<form onSubmit={DepositBalance}>\n\t\t\t\t\t<h3> Deposit Test BNB </h3>\n\t\t\t\t\t\t<p> Deposit Amount </p>\n\t\t\t\t\t\t<input type='number' id='depositAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Deposit</button>\n\n\t\t\t</form>\n\t\t\t<form onSubmit={WithdrawBalance}>\n\t\t\t\t\t<h3> Withdraw Test BNB </h3>\n\t\t\t\t\t\t<p>Withdraw Amount </p>\n\t\t\t\t\t\t<input type='number' id='withdrawAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Withdraw</button>\n\n\t\t\t</form>\n\t\t</div>\n\n\t</div>\n\t)\n}\n\nexport default BankApp;","import logo from './logo.svg';\nimport './App.css';\nimport BankApp from './BankApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BankApp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}