[{"D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\index.js":"1","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\reportWebVitals.js":"2","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\App.js":"3","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\BankApp.js":"4","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\Interactions.js":"5"},{"size":500,"mtime":1678810901000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1678810901000,"results":"8","hashOfConfig":"7"},{"size":195,"mtime":1678810901000,"results":"9","hashOfConfig":"7"},{"size":5216,"mtime":1678810901000,"results":"10","hashOfConfig":"7"},{"size":1001,"mtime":1678810901000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cim2gb",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\index.js",[],"D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\reportWebVitals.js",[],"D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\App.js",["24"],"import logo from './logo.svg';\nimport './App.css';\nimport BankApp from './BankApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BankApp/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\BankApp.js",["25","26","27","28","29","30","31"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Bank.module.css'\nimport simple_token_abi from './Contracts/bank_app_abi.json'\nimport Interactions from './Interactions';\n\nconst BankApp = () => {\n\n\t// deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n\tlet contractAddress = '0x59eFE99aA926a79edEA31F7ED3b2661b1F9e2F62';\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\tconst [checkAcc, setCheckAcc] = useState(\"false\");\n\tconst [accStatus, setAccStatus]= useState(\"\");\n\tconst [accbalance, setAccBalance]= useState(\"\");\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tupdateEthers();\n\t}\n\tconst chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n\n\t// listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\n\n\tconst updateEthers = () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\t\tsetProvider(tempProvider);\n\n\t\tlet tempSigner = tempProvider.getSigner();\n\t\tsetSigner(tempSigner);\n\n\t\tlet tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n\t\tsetContract(tempContract);\t\n\t}\n\n\tconst createAccount = async()=>{\n\t\tlet txt = await contract.createAcc();\n\t\tconsole.log(txt);\n\t\tsetAccStatus(\"Your Account is created\");\n\t}\n\tconst checkAccountExists = async()=>{\n\t\t///e.preventDefault();\n\t\tlet txt = await contract.accountExists();\n\t\tif(txt==true){\n\t\tsetCheckAcc(\"true\");\n\t\t}\n\t}\n\tconst AccountBalance = async()=>{\n\t\tlet txt= await contract.accountBalance();\n\t\tlet balanceNumber = txt.toNumber();\n\t\t//let tokenDecimals = await contract.decimals();\n\t\tconsole.log(balanceNumber)\n\t\tsetAccBalance(''+balanceNumber);\n\t}\n\tconst DepositBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet depositAmount = e.target.depositAmount.value;\n\t\tlet txt= await contract.deposit({\n\t\t\tvalue: depositAmount \n\t\t});\n\t}\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet transferAmount = e.target.sendAmount.value;\n\t\tlet recieverAddress = e.target.recieverAddress.value;\n\t\tlet txt = await contract.transferEther(recieverAddress, transferAmount);\n\t\tsetTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n\t}\n\tconst WithdrawBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet withdrawAmount = e.target.withdrawAmount.value;\n\t\tlet txt= await contract.withdraw(withdrawAmount);\n\t\tconsole.log(txt);\n\t}\n\n\n\treturn (\n\t<div >\n\t\t<h2> Bank Dapp- Create Account,Check Account,Check Balance,Transfer and Deposit </h2>\n\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\n\n\t\t<div className={styles.walletCard}>\n\t\t<div>\n\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button onClick={AccountBalance}>Account Balance</button> <h3>Balance in the Bank: {accbalance} </h3>\n\t\t</div>\n\n\t\t\t{errorMessage}\n\t\t</div>\n\t\t<div className={styles.interactionsCard}>\n\t\t<div>\n\t\t<h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\n\t\t\t<button onClick={createAccount}>CreateAccount</button>\n\t\t\t<h4>Click here to check if your account Exists or not</h4>\n\t\t\t<button onClick={checkAccountExists}>CheckAccountExists</button>\n\t\t\t<h4>Your Account Status</h4> <h5> {checkAcc}</h5>\n\t\t</div>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t<h3> Transfer money </h3>\n\t\t\t\t\t\t<p> Reciever Address </p>\n\t\t\t\t\t\t<input type='text' id='recieverAddress' className={styles.addressInput}/>\n\n\t\t\t\t\t\t<p> Transfer Amount </p>\n\t\t\t\t\t\t<input type='number' id='sendAmount' min='0' step='1'/>\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Transfer</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<form onSubmit={DepositBalance}>\n\t\t\t\t\t<h3> Deposit Money </h3>\n\t\t\t\t\t\t<p> Deposit Amount </p>\n\t\t\t\t\t\t<input type='number' id='depositAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Deposit</button>\n\n\t\t\t</form>\n\t\t\t<form onSubmit={WithdrawBalance}>\n\t\t\t\t\t<h3> Withdraw Money </h3>\n\t\t\t\t\t\t<p>Withdraw Amount </p>\n\t\t\t\t\t\t<input type='number' id='withdrawAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Withdraw</button>\n\n\t\t\t</form>\n\t\t</div>\n\n\t</div>\n\t)\n}\n\nexport default BankApp;","D:\\METACRAFTERS\\EVM\\SOLIDITY\\Bank-DApp-main\\src\\Interactions.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":1,"column":26,"nodeType":"34","messageId":"35","endLine":1,"endColumn":35},{"ruleId":"32","severity":1,"message":"37","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":20},{"ruleId":"32","severity":1,"message":"38","line":16,"column":9,"nodeType":"34","messageId":"35","endLine":16,"endColumn":17},{"ruleId":"32","severity":1,"message":"39","line":17,"column":9,"nodeType":"34","messageId":"35","endLine":17,"endColumn":15},{"ruleId":"32","severity":1,"message":"40","line":22,"column":9,"nodeType":"34","messageId":"35","endLine":22,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":78,"column":9,"nodeType":"43","messageId":"44","endLine":78,"endColumn":11},{"ruleId":"32","severity":1,"message":"45","line":92,"column":7,"nodeType":"34","messageId":"35","endLine":92,"endColumn":10},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Interactions' is defined but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","'accStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'txt' is assigned a value but never used."]