{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vivek\\\\Desktop\\\\Metacrafters\\\\Code_Module2\\\\Code_Module2\\\\Chapter4_Fromtend_Integration\\\\src\\\\BankApp.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Bank.module.css';\nimport simple_token_abi from './Contracts/bank_app_abi.json';\nimport Interactions from './Interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BankApp = () => {\n  _s();\n\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = '0x59eFE99aA926a79edEA31F7ED3b2661b1F9e2F62';\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [transferHash, setTransferHash] = useState(null);\n  const [checkAcc, setCheckAcc] = useState(\"false\");\n  const [accStatus, setAccStatus] = useState(\"\");\n  const [accbalance, setAccBalance] = useState(\"\");\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const createAccount = async () => {\n    let txt = await contract.createAcc();\n    console.log(txt);\n    setAccStatus(\"Your Account is created\");\n  };\n\n  const checkAccountExists = async () => {\n    ///e.preventDefault();\n    let txt = await contract.accountExists();\n\n    if (txt == true) {\n      setCheckAcc(\"true\");\n    }\n  };\n\n  const AccountBalance = async () => {\n    let txt = await contract.accountBalance();\n    let balanceNumber = txt.toNumber(); //let tokenDecimals = await contract.decimals();\n\n    console.log(balanceNumber);\n    setAccBalance('' + balanceNumber);\n  };\n\n  const DepositBalance = async e => {\n    e.preventDefault();\n    let depositAmount = e.target.depositAmount.value;\n    let txt = await contract.deposit({\n      value: depositAmount\n    });\n  };\n\n  const transferHandler = async e => {\n    e.preventDefault();\n    let transferAmount = e.target.sendAmount.value;\n    let recieverAddress = e.target.recieverAddress.value;\n    let txt = await contract.transferEther(recieverAddress, transferAmount);\n    setTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n  };\n\n  const WithdrawBalance = async e => {\n    e.preventDefault();\n    let withdrawAmount = e.target.withdrawAmount.value;\n    let txt = await contract.withdraw(withdrawAmount);\n    console.log(txt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Bank Dapp- Create Account,Check Account,Check Balance,Transfer and Deposit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button6,\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.walletCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AccountBalance,\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 4\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance in the Bank: \", accbalance, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 3\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.interactionsCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to Create your account. Make sure you are connected to Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAccount,\n          children: \"CreateAccount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to check if your account Exists or not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAccountExists,\n          children: \"CheckAccountExists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Account Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 4\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", checkAcc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: transferHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Transfer Test BNB \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Reciever Address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"recieverAddress\",\n          className: styles.addressInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Transfer Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"sendAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: transferHash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: DepositBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Deposit Test BNB \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Deposit Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depositAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: WithdrawBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Withdraw Test BNB \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Withdraw Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"withdrawAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 2\n  }, this);\n};\n\n_s(BankApp, \"XAlnTf6oC4Y3rTZNtz/atZF5TCM=\");\n\n_c = BankApp;\nexport default BankApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankApp\");","map":{"version":3,"sources":["C:/Users/vivek/Desktop/Metacrafters/Code_Module2/Code_Module2/Chapter4_Fromtend_Integration/src/BankApp.js"],"names":["React","useState","useEffect","ethers","styles","simple_token_abi","Interactions","BankApp","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","transferHash","setTransferHash","checkAcc","setCheckAcc","accStatus","setAccStatus","accbalance","setAccBalance","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","createAccount","txt","createAcc","checkAccountExists","accountExists","AccountBalance","accountBalance","balanceNumber","toNumber","DepositBalance","e","preventDefault","depositAmount","target","value","deposit","transferHandler","transferAmount","sendAmount","recieverAddress","transferEther","hash","WithdrawBalance","withdrawAmount","withdraw","button6","walletCard","interactionsCard","addressInput"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAErB;AACA,MAAIC,eAAe,GAAG,4CAAtB;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,gBAAD,CAApD;AAEA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA2BzB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA6B3B,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAM4B,oBAAoB,GAAG,MAAM;AAClC,QAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,EAAmD;AAElDF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACfC,QAAAA,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;AACAtB,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACA,OAJD,EAKCwB,KALD,CAKOC,KAAK,IAAI;AACf7B,QAAAA,eAAe,CAAC6B,KAAK,CAACC,OAAP,CAAf;AAEA,OARD;AAUA,KAZD,MAYO;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAhC,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACA;AACD,GAjBD,CAlBqB,CAqCrB;;;AACA,QAAM2B,qBAAqB,GAAIM,UAAD,IAAgB;AAC7C/B,IAAAA,iBAAiB,CAAC+B,UAAD,CAAjB;AACAC,IAAAA,YAAY;AACZ,GAHD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AACjC;AACAf,IAAAA,MAAM,CAACgB,QAAP,CAAgBC,MAAhB;AACA,GAHD,CA1CqB,CA+CrB;;;AACAjB,EAAAA,MAAM,CAACC,QAAP,CAAgBiB,EAAhB,CAAmB,iBAAnB,EAAsCX,qBAAtC;AAEAP,EAAAA,MAAM,CAACC,QAAP,CAAgBiB,EAAhB,CAAmB,cAAnB,EAAmCH,mBAAnC;;AAEA,QAAMD,YAAY,GAAG,MAAM;AAC1B,QAAIK,YAAY,GAAG,IAAI9C,MAAM,CAAC+C,SAAP,CAAiBC,YAArB,CAAkCrB,MAAM,CAACC,QAAzC,CAAnB;AACAf,IAAAA,WAAW,CAACiC,YAAD,CAAX;AAEA,QAAIG,UAAU,GAAGH,YAAY,CAACI,SAAb,EAAjB;AACAnC,IAAAA,SAAS,CAACkC,UAAD,CAAT;AAEA,QAAIE,YAAY,GAAG,IAAInD,MAAM,CAACoD,QAAX,CAAoB/C,eAApB,EAAqCH,gBAArC,EAAuD+C,UAAvD,CAAnB;AACAhC,IAAAA,WAAW,CAACkC,YAAD,CAAX;AACA,GATD;;AAWA,QAAME,aAAa,GAAG,YAAS;AAC9B,QAAIC,GAAG,GAAG,MAAMtC,QAAQ,CAACuC,SAAT,EAAhB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA/B,IAAAA,YAAY,CAAC,yBAAD,CAAZ;AACA,GAJD;;AAKA,QAAMiC,kBAAkB,GAAG,YAAS;AACnC;AACA,QAAIF,GAAG,GAAG,MAAMtC,QAAQ,CAACyC,aAAT,EAAhB;;AACA,QAAGH,GAAG,IAAE,IAAR,EAAa;AACbjC,MAAAA,WAAW,CAAC,MAAD,CAAX;AACC;AACD,GAND;;AAOA,QAAMqC,cAAc,GAAG,YAAS;AAC/B,QAAIJ,GAAG,GAAE,MAAMtC,QAAQ,CAAC2C,cAAT,EAAf;AACA,QAAIC,aAAa,GAAGN,GAAG,CAACO,QAAJ,EAApB,CAF+B,CAG/B;;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,aAAZ;AACAnC,IAAAA,aAAa,CAAC,KAAGmC,aAAJ,CAAb;AACA,GAND;;AAOA,QAAME,cAAc,GAAG,MAAMC,CAAN,IAAU;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAGF,CAAC,CAACG,MAAF,CAASD,aAAT,CAAuBE,KAA3C;AACA,QAAIb,GAAG,GAAE,MAAMtC,QAAQ,CAACoD,OAAT,CAAiB;AAC/BD,MAAAA,KAAK,EAAEF;AADwB,KAAjB,CAAf;AAGA,GAND;;AAOA,QAAMI,eAAe,GAAG,MAAON,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIM,cAAc,GAAGP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBJ,KAAzC;AACA,QAAIK,eAAe,GAAGT,CAAC,CAACG,MAAF,CAASM,eAAT,CAAyBL,KAA/C;AACA,QAAIb,GAAG,GAAG,MAAMtC,QAAQ,CAACyD,aAAT,CAAuBD,eAAvB,EAAwCF,cAAxC,CAAhB;AACAnD,IAAAA,eAAe,CAAC,iCAAiCmC,GAAG,CAACoB,IAAtC,CAAf;AACA,GAND;;AAOA,QAAMC,eAAe,GAAG,MAAMZ,CAAN,IAAU;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIY,cAAc,GAAGb,CAAC,CAACG,MAAF,CAASU,cAAT,CAAwBT,KAA7C;AACA,QAAIb,GAAG,GAAE,MAAMtC,QAAQ,CAAC6D,QAAT,CAAkBD,cAAlB,CAAf;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA,GALD;;AAQA,sBACA;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAErD,MAAM,CAAC6E,OAA1B;AAAmC,MAAA,OAAO,EAAEpD,oBAA5C;AAAA,gBAAmEhB;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAK,MAAA,SAAS,EAAET,MAAM,CAAC8E,UAAvB;AAAA,8BACA;AAAA,+BACC;AAAA,kCAAcvE,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA,gCACC;AAAQ,UAAA,OAAO,EAAEkD,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,oBAC2D;AAAA,8CAA0BlC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,EASElB,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAeC;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC+E,gBAAvB;AAAA,8BACA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEC;AAAQ,UAAA,OAAO,EAAE3B,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAQ,UAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,oBAK8B;AAAA,0BAAMpC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAL9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAQE;AAAM,QAAA,QAAQ,EAAEiD,eAAhB;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,iBAAtB;AAAwC,UAAA,SAAS,EAAEpE,MAAM,CAACgF;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,YAAxB;AAAqC,UAAA,GAAG,EAAC,GAAzC;AAA6C,UAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBANF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEhF,MAAM,CAAC6E,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,oBACE5D;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAqBC;AAAM,QAAA,QAAQ,EAAE4C,cAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,eAAxB;AAAwC,UAAA,GAAG,EAAC,GAA5C;AAAgD,UAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE7D,MAAM,CAAC6E,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD,eA4BC;AAAM,QAAA,QAAQ,EAAEH,eAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,gBAAxB;AAAyC,UAAA,GAAG,EAAC,GAA7C;AAAiD,UAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE1E,MAAM,CAAC6E,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuDA,CA/JD;;GAAM1E,O;;KAAAA,O;AAiKN,eAAeA,OAAf","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Bank.module.css'\nimport simple_token_abi from './Contracts/bank_app_abi.json'\nimport Interactions from './Interactions';\n\nconst BankApp = () => {\n\n\t// deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n\tlet contractAddress = '0x59eFE99aA926a79edEA31F7ED3b2661b1F9e2F62';\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\tconst [checkAcc, setCheckAcc] = useState(\"false\");\n\tconst [accStatus, setAccStatus]= useState(\"\");\n\tconst [accbalance, setAccBalance]= useState(\"\");\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tupdateEthers();\n\t}\n\tconst chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n\n\t// listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\n\n\tconst updateEthers = () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\t\tsetProvider(tempProvider);\n\n\t\tlet tempSigner = tempProvider.getSigner();\n\t\tsetSigner(tempSigner);\n\n\t\tlet tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n\t\tsetContract(tempContract);\t\n\t}\n\n\tconst createAccount = async()=>{\n\t\tlet txt = await contract.createAcc();\n\t\tconsole.log(txt);\n\t\tsetAccStatus(\"Your Account is created\");\n\t}\n\tconst checkAccountExists = async()=>{\n\t\t///e.preventDefault();\n\t\tlet txt = await contract.accountExists();\n\t\tif(txt==true){\n\t\tsetCheckAcc(\"true\");\n\t\t}\n\t}\n\tconst AccountBalance = async()=>{\n\t\tlet txt= await contract.accountBalance();\n\t\tlet balanceNumber = txt.toNumber();\n\t\t//let tokenDecimals = await contract.decimals();\n\t\tconsole.log(balanceNumber)\n\t\tsetAccBalance(''+balanceNumber);\n\t}\n\tconst DepositBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet depositAmount = e.target.depositAmount.value;\n\t\tlet txt= await contract.deposit({\n\t\t\tvalue: depositAmount \n\t\t});\n\t}\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet transferAmount = e.target.sendAmount.value;\n\t\tlet recieverAddress = e.target.recieverAddress.value;\n\t\tlet txt = await contract.transferEther(recieverAddress, transferAmount);\n\t\tsetTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n\t}\n\tconst WithdrawBalance = async(e)=>{\n\t\te.preventDefault();\n\t\tlet withdrawAmount = e.target.withdrawAmount.value;\n\t\tlet txt= await contract.withdraw(withdrawAmount);\n\t\tconsole.log(txt);\n\t}\n\n\n\treturn (\n\t<div >\n\t\t<h2> Bank Dapp- Create Account,Check Account,Check Balance,Transfer and Deposit </h2>\n\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\n\n\t\t<div className={styles.walletCard}>\n\t\t<div>\n\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button onClick={AccountBalance}>Account Balance</button> <h3>Balance in the Bank: {accbalance} </h3>\n\t\t</div>\n\n\t\t\t{errorMessage}\n\t\t</div>\n\t\t<div className={styles.interactionsCard}>\n\t\t<div>\n\t\t<h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\n\t\t\t<button onClick={createAccount}>CreateAccount</button>\n\t\t\t<h4>Click here to check if your account Exists or not</h4>\n\t\t\t<button onClick={checkAccountExists}>CheckAccountExists</button>\n\t\t\t<h4>Your Account Status</h4> <h5> {checkAcc}</h5>\n\t\t</div>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t<h3> Transfer Test BNB </h3>\n\t\t\t\t\t\t<p> Reciever Address </p>\n\t\t\t\t\t\t<input type='text' id='recieverAddress' className={styles.addressInput}/>\n\n\t\t\t\t\t\t<p> Transfer Amount </p>\n\t\t\t\t\t\t<input type='number' id='sendAmount' min='0' step='1'/>\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Transfer</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<form onSubmit={DepositBalance}>\n\t\t\t\t\t<h3> Deposit Test BNB </h3>\n\t\t\t\t\t\t<p> Deposit Amount </p>\n\t\t\t\t\t\t<input type='number' id='depositAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Deposit</button>\n\n\t\t\t</form>\n\t\t\t<form onSubmit={WithdrawBalance}>\n\t\t\t\t\t<h3> Withdraw Test BNB </h3>\n\t\t\t\t\t\t<p>Withdraw Amount </p>\n\t\t\t\t\t\t<input type='number' id='withdrawAmount' min='0' step='1'/>\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Withdraw</button>\n\n\t\t\t</form>\n\t\t</div>\n\n\t</div>\n\t)\n}\n\nexport default BankApp;"]},"metadata":{},"sourceType":"module"}